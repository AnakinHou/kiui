//  Copyright (c) 2016 Hugo Amiard hugo.amiard@laposte.net
//  This software is provided 'as-is' under the zlib License, see the LICENSE.txt file.
//  This notice and the license may not be removed or altered from any source distribution.

#ifndef TOY_DOCKSPACE_H
#define TOY_DOCKSPACE_H

/* toy */
#include <toyui/Forward.h>
#include <toyui/Widget/Sheet.h>
#include <toyui/Button/Button.h>
#include <toyui/Container/Tabber.h>
#include <toyui/Frame/Grid.h>

namespace toy
{
	class _I_ TOY_UI_EXPORT Placeholder : public Container
	{
	public:
		Placeholder(Wedge& parent, const string& name);

		const string& name() { return m_name; }

		static Type& cls() { static Type ty("Placeholder", Board::cls()); return ty; }

	protected:
		string m_name;
	};

	class _I_ TOY_UI_EXPORT DockTab
	{
	public:
		static Type& cls() { static Type ty("DockTab", Tab::cls()); return ty; }
	};

	class _I_ TOY_UI_EXPORT Docksection : public Tabber
	{
	public:
		Docksection(Wedge& parent, Dockspace& dockspace);

		Tab& addTab(const string& name);

		void handleRemove(Widget& widget);

		void dock(Window& window);
		void undock(Window& window);

		Docksection& docktarget(Dimension dim, bool after);
		Docksection& docktarget(float x, float y);

		static Type& cls() { static Type ty("Docksection", Tabber::cls()); return ty; }

	protected:
		Dockspace& m_dockspace;
	};

	class _I_ TOY_UI_EXPORT Dockspace : public Container
	{
	public:
		Dockspace(Wedge& parent);

		Docksection& addSection(const GridIndex& dockid);
		void removeSection(Docksection& section);

		Docksection* findSection(const GridIndex& dockid);
		Docksection& createSection(const GridIndex& dockid);

		Docksection& findOrCreateSection(const GridIndex& dockid);

		Window& addDockWindow(const string& name, const GridIndex& dockid);

		virtual void leftDragStart(MouseEvent& mouseEvent);
		virtual void leftDrag(MouseEvent& mouseEvent);

		static Type& cls() { static Type ty("Dockspace", Layout::cls()); return ty; }

	protected:
		std::vector<Docksection*> m_sections;

		GridSubdiv* m_dragLine;
		Frame* m_dragPrev;
		Frame* m_dragNext;
	};
}

#endif
